{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleNameChange","e","target","value","className","s","form","preventDefault","htmlFor","type","onChange","pattern","title","required","Filter","filter","ContactList","contacts","onDeleteContact","map","id","item","onClick","uuidv4","App","setContacts","setFilter","useEffect","JSON","parse","localStorage","getItem","prevState","setItem","stringify","find","contact","duplicateValidator","alert","normalizedFilter","toLowerCase","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.68da6c3d.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"\">Name</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"\">Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleNameChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onChange}></input>\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={uuidv4()}>\n          <p>\n            {name} : {number}\n          </p>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (contacts) {\r\n      setContacts(contacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(\r\n    prevState =>\r\n      contacts !== prevState &&\r\n      localStorage.setItem('contacts', JSON.stringify(contacts)),\r\n    [contacts],\r\n  );\r\n\r\n  const duplicateValidator = name =>\r\n    contacts.find(contact => contact.name === name);\r\n\r\n  const contactFormSubmitHandler = (name, number) => {\r\n    duplicateValidator(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : setContacts(prevState => [\r\n          { name: name, number: number, id: uuidv4() },\r\n          ...prevState,\r\n        ]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== contactId),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={contactFormSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        contacts={getFilteredContacts()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  filter: PropTypes.string,\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2rrPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__5r2mj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3un7w\"};"],"sourceRoot":""}